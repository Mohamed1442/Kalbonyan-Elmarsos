{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/layout/Layout.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/quotes/HighlightedQuote.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/quotes/NoQuotesFound.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","pages/NotFound.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js","App.js","index.js"],"names":["module","exports","MainNavigation","className","classes","header","logo","nav","activeClassName","active","to","Layout","props","main","children","NoQuotesFound","noquotes","QuoteItem","item","text","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isAscending","URLSearchParams","search","get","sorting","onClick","push","list","sort","quoteA","quoteB","map","quote","LoadingSpinner","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","console","log","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","addQuote","quoteData","method","body","JSON","stringify","headers","AllQuotes","useEffect","length","Card","card","QuoteForm","authorInputRef","useRef","textInputRef","useState","isError","setIsError","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","addedQuote","NotFound","NewCommentForm","commentTextRef","submitFormHandler","Comments","isAddingComment","setIsAddingComment","comments","HighlightedQuote","QuoteDetail","params","useParams","find","quoteId","path","exact","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a7a424f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2sUCr\",\"logo\":\"MainNavigation_logo__27qwm\",\"nav\":\"MainNavigation_nav__3D2Ni\",\"active\":\"MainNavigation_active__2rq00\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1zIGK\",\"loading\":\"QuoteForm_loading__1rbBI\",\"control\":\"QuoteForm_control__2vxm3\",\"actions\":\"QuoteForm_actions__18fKR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2bqIB\",\"loading\":\"NewCommentForm_loading__OH9EH\",\"control\":\"NewCommentForm_control__2Xj03\",\"actions\":\"NewCommentForm_actions__259Hk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3FGLj\",\"sorting\":\"QuoteList_sorting__13TKk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1kOX4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__1-mGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2b89y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__31afb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__Hk35k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3jy7S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__Mdfzb\"};","import { NavLink } from \"react-router-dom\";\r\n\r\nimport classes from \"./MainNavigation.module.css\";\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>Great Quotes</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink activeClassName={classes.active} to=\"/quotes\">\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink activeClassName={classes.active} to=\"/new-quote\">\r\n              Add a New Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import { Fragment } from \"react\";\r\nimport classes from \"./Layout.module.css\";\r\nimport MainNavigation from \"./MainNavigation\";\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MainNavigation />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import classes from \"./NoQuotesFound.module.css\";\n\nimport { Link } from \"react-router-dom\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/new-quote\" className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import classes from \"./QuoteItem.module.css\";\n\nimport { Link } from \"react-router-dom\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`quotes/${props.id}`} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n\n  const isAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA, quoteB) => {\n      if (ascending) {\n        return quoteA.id > quoteB.id ? 1 : -1;\n      } else {\n        return quoteA.id < quoteB.id ? 1 : -1;\n      }\n    });\n  };\n\n  const sortHandler = () => {\n    history.push(\"/quotes?sort=\" + (isAscending ? \"des\" : \"asc\"));\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={sortHandler}>\n          Sort {isAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortQuotes(props.quotes, isAscending).map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from \"react\";\n\nfunction httpReducer(state, action) {\n  if (action.type === \"SEND\") {\n    return {\n      data: null,\n      error: null,\n      status: \"pending\",\n    };\n  }\n\n  if (action.type === \"SUCCESS\") {\n    return {\n      data: action.responseData,\n      error: null,\n      status: \"completed\",\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: \"completed\",\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  console.log(111);\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      console.log(2);\n      dispatch({ type: \"SEND\" });\n      console.log(3);\n      try {\n        console.log(4);\n        const responseData = await requestFunction(requestData);\n        console.log(5);\n        dispatch({ type: \"SUCCESS\", responseData });\n        console.log(6);\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMessage: error.message || \"Something went wrong!\",\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = \"https://react-20b47-default-rtdb.firebaseio.com\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { Fragment, useEffect } from \"react\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\n\r\nconst DUMMY_QUOTES = [\r\n  { id: \"q1\", author: \"mohamed\", text: \"This is my mohamed's quote\" },\r\n  { id: \"q2\", author: \"ahmed\", text: \"This is my ahmed's quote\" },\r\n];\r\n\r\nconst AllQuotes = () => {\r\n  const { sendRequest, status, data } = useHttp(getAllQuotes, true);\r\n  console.log(data);\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        {\" \"}\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (status === \"completed\" && (!data || data.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <QuoteList quotes={data} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AllQuotes;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\nimport { Prompt } from \"react-router-dom\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isError, setIsError] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const buttonFromHandler = () => {\n    setIsError(false);\n  };\n  const focusFormHandler = () => {\n    setIsError(true);\n  };\n\n  return (\n    <Fragment>\n      <Card>\n        <Prompt\n          when={isError}\n          message={(location) => \"Are you sure you want to leave?\"}\n        />\n        <form\n          onFocus={focusFormHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={buttonFromHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from \"../components/quotes/QuoteForm\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst NewQuote = () => {\r\n  const history = useHistory();\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  console.log(\"newquote\");\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.push(\"/quotes\");\r\n    }\r\n  }, [status]);\r\n\r\n  const addHandler = (addedQuote) => {\r\n    sendRequest(addedQuote);\r\n    console.log(1);\r\n  };\r\n\r\n  return <QuoteForm isLoading={status === \"pending\"} onAddQuote={addHandler} />;\r\n};\r\n\r\nexport default NewQuote;\r\n","const NotFound = () => {\r\n  return <p>404 Not Found</p>;\r\n};\r\n\r\nexport default NotFound;\r\n","import { useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState } from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useEffect } from \"react\";\r\nimport { useParams, Route, Link } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\n\r\nconst DUMMY_QUOTES = [\r\n  { id: \"q1\", author: \"mohamed\", text: \"This is my mohamed's quote\" },\r\n  { id: \"q2\", author: \"ahmed\", text: \"This is my ahmed's quote\" },\r\n];\r\n\r\nconst QuoteDetail = () => {\r\n  const { sendRequest, data } = useHttp(getAllQuotes);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  const params = useParams();\r\n  const quote = data?.find((quote) => quote.id === params.quoteId);\r\n\r\n  if (!quote && data === null) {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (!quote) {\r\n    return <p>Quote not found</p>;\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <HighlightedQuote author={quote.author} text={quote.text} />\r\n      <div className=\"centered\">\r\n        <Route path={`/quotes/${params.quoteId}`} exact>\r\n          <Link className=\"btn--flat\" to={`/quotes/${params.quoteId}/comments`}>\r\n            Add Comment\r\n          </Link>\r\n        </Route>\r\n      </div>\r\n      <Route path={`/quotes/${params.quoteId}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n","import { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Layout from \"./components/layout/Layout\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport NewQuote from \"./pages/NewQuote\";\nimport NotFound from \"./pages/NotFound\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/quotes\" />\n        </Route>\n        <Route path=\"/quotes\" exact>\n          <AllQuotes />\n        </Route>\n        <Route path=\"/quotes/:quoteId\">\n          <QuoteDetail />\n        </Route>\n        <Route path=\"/new-quote\">\n          <NewQuote />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n"],"sourceRoot":""}