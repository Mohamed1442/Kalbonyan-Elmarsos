{"version":3,"sources":["hooks/use-input.js","components/SimpleInput.js","App.js","index.js"],"names":["useInput","valueCondition","useState","enteredValue","setEnteredValue","enteredValueIsValid","setEnteredValueIsValid","enteredValueIsTouched","setEnteredValueIsTouched","valueIsInvalid","valueInputClasses","inputHandler","e","target","value","inputBlurHandler","SimpleInput","props","enteredName","trim","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","setEnteredNameIsTouched","nameInputClasses","nameIsInvalid","enteredEmail","includes","setEnteredEmail","enteredEmailIsValid","setEnteredEmailIsValid","setEnteredEmailIsTouched","emailInputClasses","emailIsInvalid","emailHandler","emailBlurHandler","formIsInvalid","setFormIsInvalid","useEffect","onSubmit","preventDefault","className","htmlFor","onChange","onBlur","type","id","disabled","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"yMA2CeA,EAzCE,SAACC,GAChB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsDF,oBAAS,GAA/D,mBAAOG,EAAP,KAA4BC,EAA5B,KACA,EAA0DJ,oBAAS,GAAnE,mBAAOK,EAAP,KAA8BC,EAA9B,KAEMC,EAAiBF,IAA0BF,EAsBjD,MAAO,CACLF,eACAC,kBACAC,sBACAC,yBACAC,wBACAC,2BACAC,iBACAC,kBA5ByBD,EAEvB,uBADA,eA4BFE,aAzBmB,SAACC,GACpBR,EAAgBQ,EAAEC,OAAOC,MAC1B,EAwBCC,iBAtBuB,SAACH,GACxBJ,GAAyB,GAErBP,KACFK,GAAuB,GAGpBL,KACHK,GAAuB,EAE1B,EAcF,E,OCmEcU,EAzGK,SAACC,GACnB,MAUIjB,GAAS,iBAA6B,KAAvBkB,EAAYC,MAAlB,IATGD,EADhB,EACEf,aACiBiB,EAFnB,EAEEhB,gBACqBiB,EAHvB,EAGEhB,oBACwBiB,EAJ1B,EAIEhB,uBAC0BiB,EAL5B,EAKEf,yBACmBgB,EANrB,EAMEd,kBACgBe,EAPlB,EAOEhB,eACAE,EARF,EAQEA,aACAI,EATF,EASEA,iBAGF,EAUIf,GAAS,kBAAM0B,EAAaP,OAAOQ,SAAS,IAAnC,IATGD,EADhB,EACEvB,aACiByB,EAFnB,EAEExB,gBACqByB,EAHvB,EAGExB,oBACwByB,EAJ1B,EAIExB,uBAC0ByB,EAL5B,EAKEvB,yBACmBwB,EANrB,EAMEtB,kBACgBuB,EAPlB,EAOExB,eACcyB,EARhB,EAQEvB,aACkBwB,EATpB,EASEpB,iBAIF,EAA0Cb,oBAAS,GAAnD,mBAAOkC,EAAP,KAAsBC,EAAtB,KAEAC,qBAAU,WACmB,KAAvBpB,EAAYC,QACdG,GAAsB,GAGG,KAAvBJ,EAAYC,QACdG,GAAsB,GAGpBI,EAAaP,OAAOQ,SAAS,MAC/BG,GAAuB,GAGpBJ,EAAaP,OAAOQ,SAAS,MAChCG,GAAuB,EAE1B,GAAE,CAACZ,EAAaQ,IAEjBY,qBAAU,WAEND,GADEhB,IAAsBQ,EAK3B,GAAE,CAACR,EAAoBQ,IAsBxB,OACE,uBAAMU,SApBc,SAAC3B,GACrBA,EAAE4B,iBAEyB,KAAvBtB,EAAYC,OAKZO,EAAaP,OAAOQ,SAAS,KAC/BG,GAAuB,IAIzBV,EAAe,IACfQ,EAAgB,IAChBL,GAAwB,GACxBQ,GAAyB,IAZvBT,GAAsB,EAazB,EAGC,UACE,sBAAKmB,UAAWjB,EAAhB,UACE,uBAAOkB,QAAQ,OAAf,uBACA,uBACEC,SAAUhC,EACViC,OAAQ7B,EACRD,MAAOI,EACP2B,KAAK,OACLC,GAAG,SAEJrB,GAAiB,mBAAGgB,UAAU,aAAb,wCAEpB,sBAAKA,UAAWT,EAAhB,UACE,uBAAOU,QAAQ,QAAf,wBACA,uBACEC,SAAUT,EACVU,OAAQT,EACRrB,MAAOY,EACPmB,KAAK,QACLC,GAAG,UAEJb,GAAkB,mBAAGQ,UAAU,aAAb,qCAErB,qBAAKA,UAAU,eAAf,SACE,wBAAQM,SAAUX,EAAlB,wBAIP,EChGcY,MARf,WACE,OACE,qBAAKP,UAAU,MAAf,SACE,cAAC,EAAD,KAGL,ECHYQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,I","file":"static/js/main.fd9f798c.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useInput = (valueCondition) => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [enteredValueIsValid, setEnteredValueIsValid] = useState(false);\r\n  const [enteredValueIsTouched, setEnteredValueIsTouched] = useState(false);\r\n\r\n  const valueIsInvalid = enteredValueIsTouched && !enteredValueIsValid;\r\n\r\n  const valueInputClasses = !valueIsInvalid\r\n    ? \"form-control\"\r\n    : \"form-control invalid\";\r\n\r\n  const inputHandler = (e) => {\r\n    setEnteredValue(e.target.value);\r\n  };\r\n\r\n  const inputBlurHandler = (e) => {\r\n    setEnteredValueIsTouched(true);\r\n\r\n    if (valueCondition()) {\r\n      setEnteredValueIsValid(true);\r\n    }\r\n\r\n    if (!valueCondition()) {\r\n      setEnteredValueIsValid(false);\r\n    }\r\n  };\r\n  // enteredValue.trim() !== \"\"\r\n  return {\r\n    enteredValue,\r\n    setEnteredValue,\r\n    enteredValueIsValid,\r\n    setEnteredValueIsValid,\r\n    enteredValueIsTouched,\r\n    setEnteredValueIsTouched,\r\n    valueIsInvalid,\r\n    valueInputClasses,\r\n    inputHandler,\r\n    inputBlurHandler,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n","import { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    enteredValue: enteredName,\n    setEnteredValue: setEnteredName,\n    enteredValueIsValid: enteredNameIsValid,\n    setEnteredValueIsValid: setEnteredNameIsValid,\n    setEnteredValueIsTouched: setEnteredNameIsTouched,\n    valueInputClasses: nameInputClasses,\n    valueIsInvalid: nameIsInvalid,\n    inputHandler,\n    inputBlurHandler,\n  } = useInput(() => enteredName.trim() !== \"\");\n\n  const {\n    enteredValue: enteredEmail,\n    setEnteredValue: setEnteredEmail,\n    enteredValueIsValid: enteredEmailIsValid,\n    setEnteredValueIsValid: setEnteredEmailIsValid,\n    setEnteredValueIsTouched: setEnteredEmailIsTouched,\n    valueInputClasses: emailInputClasses,\n    valueIsInvalid: emailIsInvalid,\n    inputHandler: emailHandler,\n    inputBlurHandler: emailBlurHandler,\n  } = useInput(() => enteredEmail.trim().includes(\"@\"));\n\n  // Form\n  const [formIsInvalid, setFormIsInvalid] = useState(true);\n\n  useEffect(() => {\n    if (enteredName.trim() !== \"\") {\n      setEnteredNameIsValid(true);\n    }\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n    }\n\n    if (enteredEmail.trim().includes(\"@\")) {\n      setEnteredEmailIsValid(true);\n    }\n\n    if (!enteredEmail.trim().includes(\"@\")) {\n      setEnteredEmailIsValid(false);\n    }\n  }, [enteredName, enteredEmail]);\n\n  useEffect(() => {\n    if (enteredNameIsValid && enteredEmailIsValid) {\n      setFormIsInvalid(false);\n    } else {\n      setFormIsInvalid(true);\n    }\n  }, [enteredNameIsValid, enteredEmailIsValid]);\n\n  // Form handler\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    if (enteredEmail.trim().includes(\"@\")) {\n      setEnteredEmailIsValid(false);\n      return;\n    }\n\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setEnteredNameIsTouched(false);\n    setEnteredEmailIsTouched(false);\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          onChange={inputHandler}\n          onBlur={inputBlurHandler}\n          value={enteredName}\n          type=\"text\"\n          id=\"name\"\n        />\n        {nameIsInvalid && <p className=\"error-text\">Name must not be empty.</p>}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          onChange={emailHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n          type=\"email\"\n          id=\"email\"\n        />\n        {emailIsInvalid && <p className=\"error-text\">Email must have '@'.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={formIsInvalid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n\n// Name\n// const [enteredName, setEnteredName] = useState(\"\");\n// const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n// const [enteredNameIsTouched, setEnteredNameIsTouched] = useState(false);\n\n// const nameIsInvalid = enteredNameIsTouched && !enteredNameIsValid;\n\n// const nameInputClasses = !nameIsInvalid\n//   ? \"form-control\"\n//   : \"form-control invalid\";\n\n// Email\n// const [enteredEmail, setEnteredEmail] = useState(\"\");\n// const [enteredEmailIsValid, setEnteredEmailIsValid] = useState(false);\n// const [enteredEmailIsTouched, setEnteredEmailIsTouched] = useState(false);\n// const emailIsInvalid = enteredEmailIsTouched && !enteredEmailIsValid;\n\n// const emailInputClasses = !emailIsInvalid\n//   ? \"form-control\"\n//   : \"form-control invalid\";\n\n// Name handlers\n// const inputHandler = (e) => {\n//   setEnteredName(e.target.value);\n// };\n\n// const inputBlurHandler = (e) => {\n//   setEnteredNameIsTouched(true);\n\n//   if (enteredName.trim() !== \"\") {\n//     setEnteredNameIsValid(true);\n//   }\n\n//   if (enteredName.trim() === \"\") {\n//     setEnteredNameIsValid(false);\n//   }\n// };\n\n// Email handlers\n// const emailHandler = (e) => {\n//   setEnteredEmail(e.target.value);\n// };\n\n// const emailBlurHandler = (e) => {\n//   setEnteredEmailIsTouched(true);\n\n//   if (enteredEmail.trim().includes(\"@\")) {\n//     setEnteredEmailIsValid(true);\n//   }\n\n//   if (!enteredEmail.trim().includes(\"@\")) {\n//     setEnteredEmailIsValid(false);\n//   }\n// };\n","import SimpleInput from './components/SimpleInput';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <SimpleInput />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}