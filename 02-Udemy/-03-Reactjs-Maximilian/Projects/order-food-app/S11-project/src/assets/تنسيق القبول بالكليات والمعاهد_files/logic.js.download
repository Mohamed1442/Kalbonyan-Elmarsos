
var ThisYear = new Date().getFullYear();

function GenderCode(BasicData)
{
	return BasicData.getAttribute("GenderCode");
}

function ReligionCode(BasicData)
{
	return BasicData.getAttribute("ReligionCode");	
}

function Mark(BasicData,ExamCode)
{
	switch(ExamCode)
	{
	    case 'Arabic':
	        if (BasicData.getAttribute("SeatNumber") < 2000000)
	            return parseFloat(BasicData.getAttribute("ArabicMarks")) * 100 / 80;
	        else
	            return parseFloat(BasicData.getAttribute("ArabicMarks")) * 100 / 60;
	        break;
	    case 'FirstLanguage':
	        return parseFloat(BasicData.getAttribute("FirstLangMarks")) * 100 / 50;
	        break;
	    case 'SecondLanguage':
	        if (BasicData.getAttribute("SeatNumber") < 2000000)
	            return parseFloat(BasicData.getAttribute("SecondLangMarks")) * 100 / 40;
            else
	            return parseFloat(BasicData.getAttribute("SecondLangMarks")) * 100 / 50;
	        break
	    case 'TotalLanguages':
	        if (BasicData.getAttribute("SeatNumber") < 2000000)
	            return (parseFloat(BasicData.getAttribute("ArabicMarks")) + parseFloat(BasicData.getAttribute("FirstLangMarks")) + parseFloat(BasicData.getAttribute("SecondLangMarks"))) *100 / 170
	        else
	            return (parseFloat(BasicData.getAttribute("ArabicMarks")) + parseFloat(BasicData.getAttribute("FirstLangMarks")) + parseFloat(BasicData.getAttribute("SecondLangMarks"))) *100 / 160
	        break;
	    case 'TotalForeignLanguages':
	        if (BasicData.getAttribute("SeatNumber") < 2000000) {
                if(parseFloat(BasicData.getAttribute("SecondLangMarks"))==0) // معفي
                    return (parseFloat(BasicData.getAttribute("FirstLangMarks"))) * 100 / 50
                else
	                return (parseFloat(BasicData.getAttribute("FirstLangMarks")) + parseFloat(BasicData.getAttribute("SecondLangMarks"))) * 100 / 90
	        } else {
	            if(parseFloat(BasicData.getAttribute("SecondLangMarks"))==0) // معفي
	                return (parseFloat(BasicData.getAttribute("FirstLangMarks"))) * 100 / 50
	            else
	                return (parseFloat(BasicData.getAttribute("FirstLangMarks")) + parseFloat(BasicData.getAttribute("SecondLangMarks"))) * 100 / 100
	        }
	        break;
	    case 'Total':
	        return parseFloat(BasicData.getAttribute("TotalMarks")) * 100 / 410;
	    default:
	        return 0;
	}
}

function IsFirstLanguageEnglish(BasicData)
{
	return BasicData.getAttribute("FirstLang")==1;
}

function Sight(BasicData) {
    if ((BasicData.getAttribute("ArchArtCap")).length <= 8) {
        return true;
    } else {
        return false;
    }
}
function Age(BasicData)
{
	if(BasicData.Month<10)
		{
		return ThisYear - eval(BasicData.getAttribute("Age"));
		}
	else
		{
	    return ThisYear - eval(BasicData.getAttribute("Age")) - 1;
		}
}

function SubjectSet(BasicData)
{
	return SubjectSetId(BasicData.getAttribute("Subjectsets"));
}
function CanFacultyBeShown(_Faculty,BasicData)
{

    try{
        if (!_Faculty.getAttribute("Name"))
            return 0;
    } catch (e) {
        alert("0عزيزي الطالب ، لقد تم غلق التسجيل بإحدي الكليات المسجلة في رغباتك سابقا ، من فضلك قم بإعادة نسجيل الدخول واختيار قائمة رغبات جديدة"+ _Faculty.getAttribute("Code")+"-"+BasicData.getAttribute("SeatNumber"))
        //window.parent.parent.location="./Default.aspx"
        return 0;
    }
    if (!CheckExceedLimit(_Faculty, BasicData))
		return 0;
    var ConditionNumber = _Faculty.getAttribute("C")
	switch(eval(ConditionNumber))
	{
		case 0:
		{
			return 1
		}
		case 1:	
			if(GenderCode(BasicData)==1)
				return 1
			else
				return 0
		case 2:
		{
			if(GenderCode(BasicData)==2)
				return 1
			else
				return 0
		}
		case 7:
		{
			if(GenderCode(BasicData)==2)
				return 1
			else
				return 0
		}
	    case 9:
	        {
	            if (!Sight(BasicData))
	                return 0
	            break;
	        }
	    case 10:
	        {
		   if(  (",34,35,".indexOf(","+BasicData.getAttribute("ZoneCode")+",") >=0 && (parseFloat(BasicData.getAttribute("TotalMarks"))>=600 ))  || (parseFloat(BasicData.getAttribute("TotalMarks"))>=700) )
	                return 1
	            else
                    return 0
            }
	        
	     
	    case 33:
	        {
	            if (Mark(BasicData, 'FirstLanguage') >= 75 && IsFirstLanguageEnglish(BasicData))
	                return 1
	            else
	                return 0
	        }
	    case 55:
            {
                if (parseFloat(eval(BasicData.getAttribute("FirstLangMarks"))) >= 22 && eval(BasicData.getAttribute("Rank")) == 91)
                    return 1
                if (parseFloat(eval(BasicData.getAttribute("FirstLangMarks")))+parseFloat(eval(BasicData.getAttribute("SecondLangMarks"))) >= 55 && eval(BasicData.getAttribute("Rank")) == 95)
                    return 1
                return 0;
                    }
	    case 60:
	        {
	            if (ConditionValue != BasicData.getAttribute("ZoneCode"))
	                return 0
	            break;
	        }
            //End Azhar Conds

		case 14:
		{
			return (ReligionCode(BasicData)==1);
		}
		case 15:
		{
			if(GenderCode(BasicData)==1)
				return 1  
			else
				return 0
		}
		case 16:
		{
			if(GenderCode(BasicData)==2)
				return 1
			else
				return 0
        }
	case 18:
		if(window.location.href.toLowerCase().includes("validateforms.aspx"))
			return true;
        if (BasicData.getAttribute("ArchArtCap").indexOf("الفنون") >= 0)
            return true;
		else
			return false;
			
        case 20:
        {
            if (Mark(BasicData, 'FirstLanguage') >= 70)
                return 1
            else
                return 0
        }
		case 28:
		{
			if(GenderCode(BasicData)==2)
				return 1	
			else
				return 0
		}
		case 29:
		{
			if(GenderCode(BasicData)==1)
				return 1
			else
				return 0
		}
		case 30:
		{
			if(SubjectSet(BasicData)==2)
				return 1
			else
			{
				if(SubjectSet(BasicData)==1 && GenderCode(BasicData)==2)
					return 1
				else
					return 0
			}
		}
	    case 62:
	        return 1;
	    case 63:
	        {
	            if (Mark(BasicData, 'TotalForeignLanguages') >= 55)
	                return 1
	            else
	                return 0;
	        }

	    case 65:
	        {
	            if (Mark(BasicData, 'TotalLanguages') >= 75)
	                return 1
	            else
	                return 0

	        }
        /*{

        if ((parseFloat(BasicData.getAttribute("ArabicMarks"))  +  parseFloat(BasicData.getAttribute("FirstLangMarks"))  +  parseFloat(BasicData.getAttribute("SecondLangMarks"))) >= 144)

            return 1
        else
            return 0

        }*/
		case 70:
		{

			if(BasicData.getAttribute("FirstLang") == 1 && BasicData.getAttribute("FirstLangMarks")>=40)
				return 1
			else
				return 0
			
		}
		case 80:
		{
			if(BasicData.getAttribute("FirstLang") == 2 && BasicData.getAttribute("FirstLangMarks")>=40 )
				return 1
			else
				return 0
		}
	}
	return 1
}

function CheckSpecialRules(Faculty,BasicData)
{

    if (!CheckExceedLimit(Faculty, BasicData))
        {

		    return 0;
		}
	var ConditionNumber = Faculty.getAttribute("C")
	switch(eval(ConditionNumber))
	{
		case 0:
		{
			return 1
		}
		case 1:	
			if(GenderCode(BasicData)==1)
				return 1
			else
				return 0
		case 3:
		{
			return -1

		}
		case 5:
		{
			return 1;
		}
		case 6:
		{
		    if (Mark(BasicData, 'Arabic') >= 70 && Mark(BasicData, 'FirstLanguage') >= 70 && Mark(BasicData, 'SecondLanguage') >= 70)
				return 1
			else
				return 0
		}
        
        case 61:
            {

            if (Mark(BasicData, 'Arabic') >= 90 && Mark(BasicData, 'FirstLanguage') >= 90 && Mark(BasicData, 'SecondLanguage') >= 90)
                return 1
            else
                return 0
        }
    case 62:
        {
            if (Mark(BasicData,'TotalLanguages')>=90)
                    return 1
            else 
                   return 0
           
        }
	    case 65:
	        {
	            if (Mark(BasicData, 'TotalLanguages') >= 75)
	                return 1
	            else
	                return 0

	        }
         case 63:
        {
            if (Mark(BasicData, 'TotalForeignLanguages') >= 55)
                return 1
            else
                return 0;
        }

		case 7:
		{
			if(GenderCode(BasicData)==2 && Mark(BasicData,'FirstLanguage')>=70 && IsFirstLanguageEnglish(BasicData))
				return 1
			else
				return 0
		}
		case 8:
		{
			if(Mark(BasicData,'FirstLanguage')>=50)
				return 1
			else
				return 0
		}
		case 11:
		{
			return -1
			
		}
		case 12:
		{
			return -1

		}
		case 13:
		{
			return 2

		}
		case 14:
		{
			return (ReligionCode(BasicData)==1);
		}
		case 15:
		{
			if(GenderCode(BasicData)==1)
				return -1  
			else
				return 0
		}
		case 16:
		{
			if(GenderCode(BasicData)==2)
				return -1 
			else
				return 0
		}
		case 17:
			return -1 
		
		case 18:
		
			return -1
			
		case 19:
			return -1 

		case 20:
		{
		    if (Mark(BasicData, 'FirstLanguage') >= 70 )
				return 3
			else
				return 0
		}
		case 21:
		{
			//*2018	 modified
			if( IsFirstLanguageEnglish(BasicData) )// && Age(BasicData)>=16 && Age(BasicData)<=22 )
				{
				return 1
				}
			else
				{
				return 0
				}

		}
	
		case 22:
		{
		    if (Age(BasicData) >= 16 && Age(BasicData) <= 22)
						
				return 1
				
			else
				
				return 0
		}
		case 23:
		{
			return -1 
		}
		case 24:
		{
			return -1 
		}	
		case 25:
		{
			return 1 
		}
			
		case 27:
		{
			return 1 
		}
		case 28:
		{
			if(GenderCode(BasicData)==2)
				return 1	
			else
				return 0
		}
		case 29:
		{
			if(GenderCode(BasicData)==1)
				return -1	
			else
				return 0
		}
		case 30:
		{
			if(SubjectSet(BasicData)==2)
				return 1
			else
			{
				if(SubjectSet(BasicData)==1 && GenderCode(BasicData)==2)
					return 1
				else
					return 0
			}
			break;
		}
		case 31: 
			return -1 
		case 32:
			return -1 
		case 33:
		{
			if(Mark(BasicData,'FirstLanguage')>=75 && IsFirstLanguageEnglish(BasicData))
				return 1
			else
				return 0
		}
		case 77:
		{
			if(CurrentStudentService()=="Transfer")
			{
				return 4;
			}else{
				return 1
			}
		}
		default:
		{
			
			return true
		}
	}
	
	return 1;	
}




function CheckExceedLimit(Faculty, BasicData) {

    var FacultyLimit = eval(Faculty.getAttribute("L"));
    var StudentTotalMark = eval(window.parent.parent.frames[1].document.getElementById("BasicData").getAttribute("TotalMarks"));
    var Certificate = getParameterByName("Certificate",eval(BasicData.getAttribute("Rank")));
    switch (eval(Certificate)) {
        case 1: 
            StudentTotalMark = parseFloat(StudentTotalMark) * 10;
			 if(  (",3,6,").indexOf(","+BasicData.getAttribute("Rank")+",") >= 0 )  //متفوقين
                {
				//DisplaySeatNumber = eval(DisplaySeatNumber) - 1000000
				
				}
			
			if(  (",160,").indexOf(","+BasicData.getAttribute("Rank")+",") >= 0 )  //متروقين
                {
			
				//DisplaySeatNumber = eval(DisplaySeatNumber) - 1000000
				var StudentTotalMark = eval(BasicData.getAttribute("Sector").split('.')[eval(Faculty.getAttribute("SG"))-1])
				}
            break;	
        case 2:
            StudentTotalMark = parseFloat(StudentTotalMark)*10 / 100;
            break;
        case 3:
            /*get student total mark for the faculty specization*/
            //var Faculty = DataDoc("Faculties" + FacultyCode)
			var markType=1;
			if (Faculty.getAttribute("SG")) markType=eval(Faculty.getAttribute("SG"));
            var StudentTotalMark = eval(BasicData.getAttribute("Sector").split('.')[markType-1])
            break;
        case 5:
					var markType=1;
			if (Faculty.getAttribute("SG")) markType=eval(Faculty.getAttribute("SG"));
            var StudentTotalMark = eval(BasicData.getAttribute("Sector").split('.')[markType-1])
            break;
        default:
            break;
    }
    /* if student total mark for the specialization is above faculty limit for the certificate then return true else return false*/

    if (StudentTotalMark >= FacultyLimit)
        return true;
    else
        return false;
}
