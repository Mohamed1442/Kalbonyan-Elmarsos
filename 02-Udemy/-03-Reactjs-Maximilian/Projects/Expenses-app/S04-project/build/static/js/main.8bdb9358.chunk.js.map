{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnterdTitle","enteredAmount","setEnterdAmount","enteredDate","setEnterdDate","closeForm","setCloseForm","onSubmit","e","preventDefault","expenseData","title","amount","date","Date","onSubmittedForm","className","type","value","onChange","target","min","max","onClick","NewExpense","data","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","calculatedHeight","maxValue","round","style","height","label","Chart","values","dataPoints","dataPoint","ExpensesChart","months","expenses","forEach","getMonth","Expenses","setDate","filterdExpenses","filter","filteredDate","DUMMY_DATA","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.8bdb9358.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnterdTitle] = useState(\"\");\r\n  const [enteredAmount, setEnterdAmount] = useState(\"\");\r\n  const [enteredDate, setEnterdDate] = useState(\"\");\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    setEnterdTitle(\"\");\r\n    setEnterdAmount(\"\");\r\n    setEnterdDate(\"\");\r\n\r\n    props.onSubmittedForm(expenseData);\r\n    setCloseForm(false);\r\n  };\r\n\r\n  const titleChangeHandler = (e) => {\r\n    setEnterdTitle(e.target.value);\r\n  };\r\n  const amountChangeHandler = (e) => {\r\n    setEnterdAmount(e.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (e) => {\r\n    setEnterdDate(e.target.value);\r\n  };\r\n  const [closeForm, setCloseForm] = useState(false);\r\n\r\n  const closeFormHandler = () => {\r\n    setCloseForm(false);\r\n  };\r\n  const showFormHandler = () => {\r\n    setCloseForm(true);\r\n  };\r\n\r\n  if (!closeForm) {\r\n    return <button onClick={showFormHandler}>Add New Expense</button>;\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={closeFormHandler}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const submittedHandler = (data) => {\r\n    const expenseData = {\r\n      ...data,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm onSubmittedForm={submittedHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const changeHandler = (e) => {\r\n    props.onFilter(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={changeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No expenses found</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n          key={expense.id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let calculatedHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    calculatedHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: calculatedHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n\r\n// import React from \"react\";\r\n// import \"./ChartBar.css\";\r\n\r\n// const ChartBar = (props) => {\r\n//   const precentageHeight = (+props.value / +props.maxVal) * 100 + \"%\";\r\n//   console.log(\"precentage\", precentageHeight);\r\n//   return (\r\n//     <div className=\"chart-bar\">\r\n//       <div className=\"chart-bar__inner\">\r\n//         <div\r\n//           className=\"chart-bar__fill\"\r\n//           style={{ height: precentageHeight }}\r\n//         ></div>\r\n//       </div>\r\n//       <div className=\"chart-bar__label\">{props.label}</div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ChartBar;\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const values = props.dataPoints.map(dataPoint => dataPoint.value)\r\n  const maxValue = Math.max(...values)\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          label={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={maxValue}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n\r\n// import React from \"react\";\r\n// import \"./Chart.css\";\r\n// import ChartBar from \"./ChartBar\";\r\n\r\n// const Chart = (props) => {\r\n//   // const filteredValues = props.items.map((bar) => bar.amount);\r\n//   let allValues = new Array(12);\r\n//   props.items.forEach((item) => {\r\n//     allValues[item.date.getMonth()] =\r\n//       (allValues[item.date.getMonth()] || 0) + item.amount;\r\n//   });\r\n//   const container = [];\r\n//   allValues.forEach((value, index) => {\r\n//     container.push({ index, value });\r\n//   });\r\n//   let lastArr = new Array(12);\r\n//   lastArr.fill(0);\r\n//   lastArr = lastArr.map((itemOut, index) => {\r\n//     container.forEach((itemIn) => {\r\n//       if (itemIn.index === index) {\r\n//         itemOut = itemIn.value;\r\n//       }\r\n//     });\r\n//     return itemOut;\r\n//   });\r\n\r\n//   const maxVal = Math.max(...lastArr);\r\n//   console.log(\"maxVal\", maxVal);\r\n//   console.log(\"lastArr\", lastArr);\r\n//   return (\r\n//     <div className=\"chart\">\r\n//       {props.bars.map((bar, index) => (\r\n//         <ChartBar\r\n//           label={bar.month}\r\n//           key={bar.month}\r\n//           value={lastArr[index]}\r\n//           maxVal={maxVal}\r\n//         />\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const months = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  props.expenses.forEach((expense) => {\r\n    months[expense.date.getMonth()].value += expense.amount;\r\n  });\r\n\r\n  return <Chart dataPoints={months} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport Chart from \"../Chart/Chart\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nfunction Expenses(props) {\r\n  const [date, setDate] = useState(\"2020\");\r\n\r\n  const filterdExpenses = props.expenses.filter((expense) => {\r\n    return expense.date.getFullYear() === +date;\r\n  });\r\n\r\n  const filterHandler = (filteredDate) => {\r\n    setDate(filteredDate);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter selected={date} onFilter={filterHandler} />\r\n      <ExpensesChart expenses={filterdExpenses}/>\r\n      <ExpensesList items={filterdExpenses} />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import NewExpense from \"./components/NewExpense/NewExpense\";\nimport React, { useState } from \"react\";\n\nimport Expenses from \"./components/Expenses/Expenses\";\n\nlet DUMMY_DATA = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 294.67,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 799.49,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_DATA);\n\n  const addExpinseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpinseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}